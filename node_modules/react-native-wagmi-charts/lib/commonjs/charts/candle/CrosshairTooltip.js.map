{"version":3,"sources":["CrosshairTooltip.tsx"],"names":["CandlestickChartCrosshairTooltipContext","React","createContext","position","value","CandlestickChartCrosshairTooltip","children","xGutter","yGutter","tooltipTextProps","textStyle","props","width","height","useContext","CandlestickChartDimensionsContext","currentY","elementHeight","elementWidth","handleLayout","useCallback","event","nativeEvent","layout","topOffset","offset","tooltip","backgroundColor","display","padding","leftTooltip","left","top","opacity","rightTooltip","style","styles","text","StyleSheet","create","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { StyleProp, TextStyle, ViewProps } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\n\nimport { CandlestickChartDimensionsContext } from './Chart';\nimport { useCandlestickChart } from './useCandlestickChart';\nimport {\n  CandlestickChartPriceText,\n  CandlestickChartPriceTextProps,\n} from './PriceText';\n\nexport type CandlestickChartCrosshairTooltipProps = ViewProps & {\n  children?: React.ReactNode;\n  xGutter?: number;\n  yGutter?: number;\n  tooltipTextProps?: CandlestickChartPriceTextProps;\n  textStyle?: Animated.AnimateStyle<StyleProp<TextStyle>>;\n};\n\nexport type CandlestickChartCrosshairTooltipContext = {\n  position: Animated.SharedValue<'left' | 'right'>;\n};\n\nexport const CandlestickChartCrosshairTooltipContext =\n  React.createContext<CandlestickChartCrosshairTooltipContext>({\n    position: { value: 'left' },\n  });\n\nexport function CandlestickChartCrosshairTooltip({\n  children,\n  xGutter = 8,\n  yGutter = 8,\n  tooltipTextProps,\n  textStyle,\n  ...props\n}: CandlestickChartCrosshairTooltipProps) {\n  const { width, height } = React.useContext(CandlestickChartDimensionsContext);\n  const { currentY } = useCandlestickChart();\n  const { position } = React.useContext(\n    CandlestickChartCrosshairTooltipContext\n  );\n\n  const elementHeight = useSharedValue(0);\n  const elementWidth = useSharedValue(0);\n\n  const handleLayout = React.useCallback(\n    (event) => {\n      elementHeight.value = event.nativeEvent.layout.height;\n      elementWidth.value = event.nativeEvent.layout.width;\n    },\n    [elementHeight, elementWidth]\n  );\n\n  const topOffset = useDerivedValue(() => {\n    let offset = 0;\n    if (currentY.value < elementHeight.value / 2 + yGutter) {\n      offset = currentY.value - (elementHeight.value / 2 + yGutter);\n    } else if (currentY.value + elementHeight.value / 2 > height - yGutter) {\n      offset = currentY.value + elementHeight.value / 2 - height + yGutter;\n    }\n\n    return offset;\n  }, [currentY, elementHeight, height, yGutter]);\n\n  const tooltip = useAnimatedStyle(\n    () => ({\n      backgroundColor: 'white',\n      position: 'absolute',\n      display: 'flex',\n      padding: 4,\n    }),\n    []\n  );\n  const leftTooltip = useAnimatedStyle(\n    () => ({\n      left: xGutter,\n      top: -(elementHeight.value / 2) - topOffset.value,\n      opacity: position.value === 'left' ? 1 : 0,\n    }),\n    [elementHeight, position, topOffset, xGutter]\n  );\n  const rightTooltip = useAnimatedStyle(\n    () => ({\n      left: width - elementWidth.value - xGutter,\n      top: -(elementHeight.value / 2) - topOffset.value,\n      opacity: position.value === 'right' ? 1 : 0,\n    }),\n    [elementHeight, elementWidth, position, topOffset, width, xGutter]\n  );\n\n  return (\n    <>\n      <Animated.View\n        onLayout={handleLayout}\n        {...props}\n        style={[tooltip, leftTooltip, props.style]}\n      >\n        {children || (\n          <CandlestickChartPriceText\n            {...tooltipTextProps}\n            style={[styles.text, tooltipTextProps?.style, textStyle]}\n          />\n        )}\n      </Animated.View>\n      <Animated.View {...props} style={[tooltip, rightTooltip, props.style]}>\n        {children || (\n          <CandlestickChartPriceText\n            {...tooltipTextProps}\n            style={[styles.text, tooltipTextProps?.style, textStyle]}\n          />\n        )}\n      </Animated.View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 14,\n  },\n});\n"]}